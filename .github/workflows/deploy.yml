name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Create production environment file
        run: |
          echo "VITE_OPENAI_API_KEY=${{ secrets.VITE_OPENAI_API_KEY }}" > .env.production
          echo "VITE_GOOGLE_PLACES_API_KEY=${{ secrets.VITE_GOOGLE_PLACES_API_KEY }}" >> .env.production
          echo "NODE_ENV=production" >> .env.production
          echo "Created .env.production file:"
          cat .env.production
        
      - name: Build project
        run: pnpm run build
          
      - name: Fix GitHub Pages MIME types
        run: |
          echo "Fixing MIME type issues for GitHub Pages..."
          touch dist/.nojekyll
          cat > dist/_headers << 'EOF'
          /*
            X-Frame-Options: DENY
            X-XSS-Protection: 1; mode=block
            X-Content-Type-Options: nosniff
            Referrer-Policy: strict-origin-when-cross-origin

          /assets/*.js
            Content-Type: application/javascript; charset=utf-8

          /assets/*.css
            Content-Type: text/css; charset=utf-8

          /vite.svg
            Content-Type: image/svg+xml

          /*.svg
            Content-Type: image/svg+xml
          EOF
          cp dist/index.html dist/404.html
          echo "MIME type fixes applied"
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: Production
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

